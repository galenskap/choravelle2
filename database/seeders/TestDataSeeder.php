<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use Illuminate\Support\Facades\Hash;
use App\Models\Tenant;
use App\Models\User;
use App\Models\Pupitre;
use App\Models\Folder;
use App\Models\Song;
use App\Models\File;
use App\Models\Event;
use App\Models\Page;
use Spatie\Permission\Models\Role;
use Carbon\Carbon;

class TestDataSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        $this->command->info('üé≠ Cr√©ation des donn√©es de test...');

        // Cr√©er les tenants
        $this->createTenants();
        
        // Cr√©er les utilisateurs admin
        $this->createAdminUsers();
        
        // Cr√©er les pupitres
        $this->createPupitres();
        
        // Cr√©er les utilisateurs factices
        $this->createFakeUsers();
        
        // Cr√©er les dossiers de saison
        $this->createSeasonFolders();
        
        // Cr√©er les chansons et fichiers
        $this->createSongsAndFiles();
        
        // Cr√©er les √©v√©nements
        $this->createEvents();
        
        // Cr√©er les pages d'accueil
        $this->createHomepages();
        
        $this->command->info('‚úÖ Donn√©es de test cr√©√©es avec succ√®s !');
    }

    private function createTenants(): void
    {
        $this->command->info('üìù Cr√©ation des organisations...');
        
        Tenant::create([
            'name' => 'Dames de choeur',
            'slug' => 'damesdechoeur',
            'domain' => 'damesdechoeur.fr',
            'description' => 'Choeur f√©minin des Dames de choeur',
            'status' => 'active',
        ]);

        Tenant::create([
            'name' => 'Music M Choeur',
            'slug' => 'musicmchoeur',
            'domain' => 'musicmchoeur.com',
            'description' => 'Choeur mixte Music M Choeur',
            'status' => 'active',
        ]);
    }

    private function createAdminUsers(): void
    {
        $this->command->info('üë• Cr√©ation des utilisateurs admin...');
        
        $adminRole = Role::where('name', 'admin')->first();
        
        $ddcTenant = Tenant::where('slug', 'damesdechoeur')->first();
        $mmcTenant = Tenant::where('slug', 'musicmchoeur')->first();

        // Admin pour Dames de choeur
        $ddcAdmin = User::create([
            'name' => 'Admin Dames de Choeur',
            'email' => 'jean.deborah+ddc@gmail.com',
            'password' => Hash::make('auieauie'),
            'email_verified_at' => now(),
            'is_active' => true,
            'tenant_id' => $ddcTenant->id,
        ]);
        if ($adminRole) {
            $ddcAdmin->assignRole($adminRole);
        }

        // Admin pour Music M Choeur
        $mmcAdmin = User::create([
            'name' => 'Admin Music M Choeur',
            'email' => 'jean.deborah+mmc@gmail.com',
            'password' => Hash::make('auieauie'),
            'email_verified_at' => now(),
            'is_active' => true,
            'tenant_id' => $mmcTenant->id,
        ]);
        if ($adminRole) {
            $mmcAdmin->assignRole($adminRole);
        }
    }

    private function createPupitres(): void
    {
        $this->command->info('üéº Cr√©ation des pupitres...');
        
        $ddcTenant = Tenant::where('slug', 'damesdechoeur')->first();
        $mmcTenant = Tenant::where('slug', 'musicmchoeur')->first();

        // Pupitres pour Dames de choeur
        $ddcPupitres = ['Alti', 'Sopranes 1', 'Sopranes 2'];
        foreach ($ddcPupitres as $pupitre) {
            Pupitre::create([
                'name' => $pupitre,
                'tenant_id' => $ddcTenant->id,
            ]);
        }

        // Pupitres pour Music M Choeur
        $mmcPupitres = ['Alti', 'Sopranes', 'T√©nors', 'Basses'];
        foreach ($mmcPupitres as $pupitre) {
            Pupitre::create([
                'name' => $pupitre,
                'tenant_id' => $mmcTenant->id,
            ]);
        }
    }

    private function createFakeUsers(): void
    {
        $this->command->info('üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Cr√©ation des utilisateurs factices...');
        
        $ddcTenant = Tenant::where('slug', 'damesdechoeur')->first();
        $mmcTenant = Tenant::where('slug', 'musicmchoeur')->first();
        
        $ddcPupitres = Pupitre::where('tenant_id', $ddcTenant->id)->get();
        $mmcPupitres = Pupitre::where('tenant_id', $mmcTenant->id)->get();
        
        $fakeNames = [
            'Marie Dupont', 'Sophie Martin', 'Claire Bernard', 'Julie Dubois', 'Camille Rousseau',
            'Emma Laurent', 'L√©a Moreau', 'Chlo√© Simon', 'Manon Michel', 'Sarah Leroy',
            'Ana√Øs Garcia', 'Laura Rodriguez', 'Pauline Martinez', 'Oc√©ane Lopez', 'In√®s Gonzalez',
            'Alice Perez', 'Juliette Sanchez', 'Eva Romero', 'Lola Ruiz', 'Mathilde Fernandez',
            'Pierre Durand', 'Antoine Thomas', 'Nicolas Robert', 'Alexandre Petit', 'Maxime Richard',
            'Lucas Moreau', 'Hugo Simon', 'Th√©o Michel', 'Louis Leroy', 'Julien Garcia',
            'Benjamin Rodriguez', 'Romain Martinez', 'Quentin Lopez', 'Adrien Gonzalez', 'Kevin Perez',
            'Florian Sanchez', 'Damien Romero', 'J√©r√©my Ruiz', 'Vincent Fernandez', 'S√©bastien Morales'
        ];

        // Utilisateurs pour Dames de choeur
        for ($i = 0; $i < 20; $i++) {
            User::create([
                'name' => $fakeNames[$i],
                'email' => 'ddc.user' . ($i + 1) . '@example.com',
                'password' => Hash::make('password'),
                'email_verified_at' => now(),
                'is_active' => true,
                'tenant_id' => $ddcTenant->id,
                'pupitre_id' => $ddcPupitres->random()->id,
            ]);
        }

        // Utilisateurs pour Music M Choeur
        for ($i = 20; $i < 40; $i++) {
            User::create([
                'name' => $fakeNames[$i],
                'email' => 'mmc.user' . ($i - 19) . '@example.com',
                'password' => Hash::make('password'),
                'email_verified_at' => now(),
                'is_active' => true,
                'tenant_id' => $mmcTenant->id,
                'pupitre_id' => $mmcPupitres->random()->id,
            ]);
        }
    }

    private function createSeasonFolders(): void
    {
        $this->command->info('üìÅ Cr√©ation des dossiers de saison...');
        
        $ddcTenant = Tenant::where('slug', 'damesdechoeur')->first();
        $mmcTenant = Tenant::where('slug', 'musicmchoeur')->first();

        Folder::create([
            'name' => 'Saison 2025-2026',
            'is_current' => true,
            'order' => 1,
            'tenant_id' => $ddcTenant->id,
        ]);

        Folder::create([
            'name' => 'Saison 2025-2026',
            'is_current' => true,
            'order' => 1,
            'tenant_id' => $mmcTenant->id,
        ]);
    }

    private function createSongsAndFiles(): void
    {
        $this->command->info('üéµ Cr√©ation des chansons et fichiers...');
        
        $ddcTenant = Tenant::where('slug', 'damesdechoeur')->first();
        $mmcTenant = Tenant::where('slug', 'musicmchoeur')->first();
        
        $ddcFolder = Folder::where('tenant_id', $ddcTenant->id)->first();
        $mmcFolder = Folder::where('tenant_id', $mmcTenant->id)->first();
        
        $ddcPupitres = Pupitre::where('tenant_id', $ddcTenant->id)->get();
        $mmcPupitres = Pupitre::where('tenant_id', $mmcTenant->id)->get();

        $songTitles = [
            'Ave Maria', 'Hallelujah', 'Amazing Grace', 'The Sound of Silence', 'Bridge Over Troubled Water',
            'Imagine', 'What a Wonderful World', 'Somewhere Over the Rainbow', 'Moon River', 'Edelweiss',
            'Memory', 'The Prayer', 'You Raise Me Up', 'Time to Say Goodbye', 'Nella Fantasia'
        ];

        $authors = [
            'Franz Schubert', 'Leonard Cohen', 'John Newton', 'Simon & Garfunkel', 'Paul Simon',
            'John Lennon', 'Louis Armstrong', 'Harold Arlen', 'Henry Mancini', 'Rodgers & Hammerstein',
            'Andrew Lloyd Webber', 'David Foster', 'Rolf L√∏vland', 'Francesco Sartori', 'Ennio Morricone'
        ];

        // Chansons pour Dames de choeur
        for ($i = 0; $i < 10; $i++) {
            $song = Song::create([
                'title' => $songTitles[$i],
                'author' => $authors[$i],
                'lyrics' => 'Paroles de la chanson ' . $songTitles[$i] . '...',
                'comment' => 'Commentaire pour ' . $songTitles[$i],
                'show_on_home' => rand(0, 1),
                'tenant_id' => $ddcTenant->id,
            ]);

            // Lier la chanson au dossier
            $ddcFolder->songs()->attach($song->id, ['order' => $i + 1]);

            // Cr√©er 2 fichiers par chanson
            for ($j = 1; $j <= 2; $j++) {
                $file = File::create([
                    'filename' => 'files/ddc_' . $song->id . '_file_' . $j . '.pdf',
                    'title' => $song->title . ' - Partie ' . $j,
                    'song_id' => $song->id,
                    'tenant_id' => $ddcTenant->id,
                    'sort_order' => $j,
                ]);

                // Assigner al√©atoirement le fichier √† des pupitres
                if (rand(0, 1)) {
                    $file->pupitres()->attach($ddcPupitres->random(rand(1, 2))->pluck('id'));
                }
            }
        }

        // Chansons pour Music M Choeur
        for ($i = 5; $i < 15; $i++) {
            $songIndex = $i % count($songTitles);
            $song = Song::create([
                'title' => $songTitles[$songIndex],
                'author' => $authors[$songIndex],
                'lyrics' => 'Paroles de la chanson ' . $songTitles[$songIndex] . ' version MMC...',
                'comment' => 'Commentaire pour ' . $songTitles[$songIndex] . ' version MMC',
                'show_on_home' => rand(0, 1),
                'tenant_id' => $mmcTenant->id,
            ]);

            // Lier la chanson au dossier
            $mmcFolder->songs()->attach($song->id, ['order' => $i - 4]);

            // Cr√©er 2 fichiers par chanson
            for ($j = 1; $j <= 2; $j++) {
                $file = File::create([
                    'filename' => 'files/mmc_' . $song->id . '_file_' . $j . '.pdf',
                    'title' => $song->title . ' - Partie ' . $j,
                    'song_id' => $song->id,
                    'tenant_id' => $mmcTenant->id,
                    'sort_order' => $j,
                ]);

                // Assigner al√©atoirement le fichier √† des pupitres
                if (rand(0, 1)) {
                    $file->pupitres()->attach($mmcPupitres->random(rand(1, 3))->pluck('id'));
                }
            }
        }
    }

    private function createEvents(): void
    {
        $this->command->info('üìÖ Cr√©ation des √©v√©nements...');
        
        $ddcTenant = Tenant::where('slug', 'damesdechoeur')->first();
        $mmcTenant = Tenant::where('slug', 'musicmchoeur')->first();

        $eventTitles = [
            'Concert de Printemps', 'R√©p√©tition g√©n√©rale', 'Concert de No√´l', 'Audition publique',
            'Festival de chorales', 'Concert caritatif', 'Repr√©sentation en plein air'
        ];

        $locations = [
            '√âglise Saint-Martin', 'Salle des f√™tes', 'Th√©√¢tre municipal', 'Conservatoire',
            'Place du village', 'Centre culturel', 'Auditorium'
        ];

        // √âv√©nements pour Dames de choeur
        // 2 √©v√©nements futurs
        for ($i = 0; $i < 2; $i++) {
            Event::create([
                'title' => $eventTitles[$i],
                'date' => Carbon::now()->addDays(rand(10, 60)),
                'time' => rand(14, 20) . ':' . (rand(0, 1) ? '00' : '30'),
                'location' => $locations[array_rand($locations)],
                'description' => 'Description de l\'√©v√©nement ' . $eventTitles[$i],
                'members_only' => rand(0, 1),
                'tenant_id' => $ddcTenant->id,
            ]);
        }

        // 5 √©v√©nements pass√©s
        for ($i = 2; $i < 7; $i++) {
            Event::create([
                'title' => $eventTitles[$i % count($eventTitles)],
                'date' => Carbon::now()->subDays(rand(10, 180)),
                'time' => rand(14, 20) . ':' . (rand(0, 1) ? '00' : '30'),
                'location' => $locations[array_rand($locations)],
                'description' => 'Description de l\'√©v√©nement ' . $eventTitles[$i % count($eventTitles)],
                'members_only' => rand(0, 1),
                'tenant_id' => $ddcTenant->id,
            ]);
        }

        // √âv√©nements pour Music M Choeur
        // 2 √©v√©nements futurs
        for ($i = 0; $i < 2; $i++) {
            Event::create([
                'title' => $eventTitles[$i],
                'date' => Carbon::now()->addDays(rand(10, 60)),
                'time' => rand(14, 20) . ':' . (rand(0, 1) ? '00' : '30'),
                'location' => $locations[array_rand($locations)],
                'description' => 'Description de l\'√©v√©nement ' . $eventTitles[$i],
                'members_only' => rand(0, 1),
                'tenant_id' => $mmcTenant->id,
            ]);
        }

        // 5 √©v√©nements pass√©s
        for ($i = 2; $i < 7; $i++) {
            Event::create([
                'title' => $eventTitles[$i % count($eventTitles)],
                'date' => Carbon::now()->subDays(rand(10, 180)),
                'time' => rand(14, 20) . ':' . (rand(0, 1) ? '00' : '30'),
                'location' => $locations[array_rand($locations)],
                'description' => 'Description de l\'√©v√©nement ' . $eventTitles[$i % count($eventTitles)],
                'members_only' => rand(0, 1),
                'tenant_id' => $mmcTenant->id,
            ]);
        }
    }

    private function createHomepages(): void
    {
        $this->command->info('üè† Cr√©ation des pages d\'accueil...');
        
        $ddcTenant = Tenant::where('slug', 'damesdechoeur')->first();
        $mmcTenant = Tenant::where('slug', 'musicmchoeur')->first();

        Page::create([
            'slug' => 'homepage',
            'title' => 'Accueil - Dames de Choeur',
            'description' => 'Page d\'accueil du site des Dames de Choeur',
            'is_published' => true,
            'tenant_id' => $ddcTenant->id,
        ]);

        Page::create([
            'slug' => 'homepage',
            'title' => 'Accueil - Music M Choeur',
            'description' => 'Page d\'accueil du site de Music M Choeur',
            'is_published' => true,
            'tenant_id' => $mmcTenant->id,
        ]);
    }
} 